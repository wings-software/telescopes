# Default values for telescopes
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  loadbalancerURL: "https://test"
  commonAnnotations: {}
  commonLabels: {}
  ingress:
    enabled: false
    disableHostInIngress: false
    pathPrefix: ""
    pathType: ""
    className: harness
    hosts:
      - my-host.example.org
    tls:
      enabled: true
      secretName: ''
    objects:
      annotations: {}
  istio:
    enabled: false
    gateway:
      create: false
    virtualService:
      gateways:
      hosts:
# image pull secrets to use for every image
  imagePullSecrets: []

replicaCount: 1

java:
  memory: "4096m"
  memoryLimit: "4096m"

image:
  registry: docker.io
  repository: harness/telescopes-signed
  pullPolicy: IfNotPresent
# Overrides the image tag whose default is the chart appVersion.
  tag: "10302"
  digest: ""
# image pull secrets to use for telescopes image
  imagePullSecrets: []

waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""
  # image pull secrets to use for helm-init-container image
    imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: "harness-default"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

service:
  annotations: {}
  type: ClusterIP
  port: 9090

virtualService:
  annotations: {}
  objects:
    - pathMatchType: prefix
      pathRewrite: "/"
      paths:
        - path: '{{ .Values.global.istio.virtualService.pathPrefix }}/ccm/recommendations/'
        - path: '{{ .Values.global.istio.virtualService.pathPrefix }}/ccm/recommendations'

ingress:
  annotations: {}
  className: nginx
  objects:
    - annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/use-regex: "true"
      paths:
      - path: '{{ .Values.global.ingress.pathPrefix }}/ccm/recommendations(/|$)(.*)'

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPU: ""
  targetMemory: ""

nodeSelector: {}

tolerations: []

affinity: {}

resources:
  limits:
    memory: "1Gi"
  requests:
    cpu: "512m"
    memory: "1Gi"

# extraVolumes:
#   - name: volume-test
#     configMap:
#       name: test-config
#       # readOnly: true
extraVolumes: []

# extraVolumeMounts:
#   - name: volume-test
#     mountPath: /opt/harness/config
extraVolumeMounts: []

lifecycleHooks: {}
# lifecycleHooks:
#   postStart:
#     exec:
#       command:
#   preStop:
#     exec:
#       command:

rbac:
  rules: []

secrets:
  default:
    key2: ""
  secretManagement:
    externalSecretsOperator:
      - secretStore:
          name: ""
          kind: ""
        remoteKeys:
          key2:
            name: ""
            property: ""

config: {}